# Generated by Django 5.2 on 2025-04-26 02:59

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "sku",
                    models.CharField(default=uuid.uuid4, max_length=50, unique=True),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "perishable",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")], default=False
                    ),
                ),
                ("expiry_days", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="products/"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ProductCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Product Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="InventoryAudit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("RESTOCK", "Restock"),
                            ("SALE", "Sale"),
                            ("ADJUSTMENT", "Adjustment"),
                            ("RETURN", "Return"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "quantity",
                    models.IntegerField(
                        help_text="Positive for additions, negative for deductions"
                    ),
                ),
                ("previous_quantity", models.IntegerField()),
                ("new_quantity", models.IntegerField()),
                ("reference", models.CharField(blank=True, max_length=100)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.product"
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Inventory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "current_stock",
                    models.IntegerField(
                        default=0,
                        help_text="Current quantity in stock",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "safety_stock",
                    models.IntegerField(
                        default=10,
                        help_text="Minimum stock level to maintain",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "reorder_point",
                    models.IntegerField(
                        default=20,
                        help_text="Stock level at which to reorder",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("last_restocked", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inventory",
                        to="core.product",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Inventory",
                "ordering": ["product__name"],
            },
        ),
        migrations.AddField(
            model_name="product",
            name="category",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="products",
                to="core.productcategory",
            ),
        ),
        migrations.CreateModel(
            name="Retailer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("location", models.CharField(max_length=255)),
                (
                    "storage_capacity",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Storage capacity in cubic meters",
                        max_digits=10,
                    ),
                ),
                ("contact", models.CharField(max_length=20)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="retailer",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["user__username"],
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("PROCESSING", "Processing"),
                            ("SHIPPED", "Shipped"),
                            ("DELIVERED", "Delivered"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("order_date", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "reference",
                    models.CharField(default=uuid.uuid4, max_length=50, unique=True),
                ),
                (
                    "retailer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="core.retailer",
                    ),
                ),
            ],
            options={
                "ordering": ["-order_date"],
            },
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="core.order",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_items",
                        to="core.product",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "unique_together": {("order", "product")},
            },
        ),
        migrations.CreateModel(
            name="DemandForecast",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "predicted_demand",
                    models.IntegerField(
                        help_text="Predicted units needed",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "confidence_score",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Model confidence percentage",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "forecast_date",
                    models.DateField(help_text="Date this forecast applies to"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("algorithm_version", models.CharField(default="v1.0", max_length=50)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="forecasts",
                        to="core.product",
                    ),
                ),
            ],
            options={
                "ordering": ["-forecast_date"],
                "indexes": [
                    models.Index(
                        fields=["product"], name="core_demand_product_1c5745_idx"
                    ),
                    models.Index(
                        fields=["forecast_date"], name="core_demand_forecas_ddcea1_idx"
                    ),
                ],
                "unique_together": {("product", "forecast_date")},
            },
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["name"], name="core_produc_name_be3252_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["sku"], name="core_produc_sku_a1eae6_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["category"], name="core_produc_categor_784c92_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["retailer"], name="core_order_retaile_6cad4e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(fields=["status"], name="core_order_status_6fe5d5_idx"),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["order_date"], name="core_order_order_d_278c74_idx"
            ),
        ),
    ]
